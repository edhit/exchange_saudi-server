require("dotenv").config();
const { Telegraf, Markup } = require("telegraf");
const mongoose = require('mongoose');
const express = require("express");

const app = express();
app.use(express.json());
app.use((req, res, next) => {
  res.header("Access-Control-Allow-Origin", "*");
  res.header(
    "Access-Control-Allow-Headers",
    "Origin, X-Requested-With, Content-Type, Accept"
  );
  next();
});


// –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –∏–∑ .env
const {
  MONGO_ROOT_USERNAME,
  MONGO_ROOT_PASSWORD,
  MONGO_DB_NAME,
  MONGO_HOST,
  MONGO_PORT,
  WEBHOOK,
  BOT_TOKEN,
  SECRET,
  START,
  EXPRESS_PORT,
  LINK,
  GROUP
} = process.env;

// –°—Ç—Ä–æ–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MongoDB
const mongoURI = MONGO_HOST;

// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB
mongoose
  .connect(mongoURI)
  .then(() => console.log('Connected to MongoDB'))
  .catch((err) => console.error('Error connecting to MongoDB:', err));

const bot = new Telegraf(BOT_TOKEN);

const path_url = SECRET;
if (WEBHOOK === "") {
  bot.launch();
} else {
  const webhookUrl = `${WEBHOOK}/${path_url}`;
  bot.telegram.setWebhook(webhookUrl);

  app.post(`/${path_url}`, (req, res) => {
    bot.handleUpdate(req.body, res);
  });
}

const text = START
  ? START
  : `‚ú® –ê—Å-—Å–∞–ª—è–º—É ‚Äò–∞–ª—è–π–∫—É–º –≤–∞ —Ä–∞—Ö–º–∞—Ç—É-–õ–ª–∞—Ö–∏ –≤–∞ –±–∞—Ä–∞–∫—è—Ç—É\n\nüí± –ß—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è, –Ω–∞–∂–º–∏ –Ω–∞ "P2P", –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É —Å–≤–µ—Ä—Ö—É. \n\nü§ñ –ß—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ, –Ω–∞–∂–º–∏ –Ω–∞ "–†–∞–∑–º–µ—Å—Ç–∏—Ç—å", –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É —Ä—è–¥–æ–º —Å "–°–æ–æ–±—â–µ–Ω–∏–µ".\n\n‚ÑπÔ∏è –û –±–æ—Ç–µ /help`;

bot.start(async (ctx) => {
  try {
    if (ctx.chat && ctx.chat.username) {
      await ctx.unpinAllChatMessages();
      const message_data = await ctx.reply(text, {
        reply_markup: {
           inline_keyboard: [
             [
               {
                 text: "P2P",
                 url: `https://t.me/${LINK}`, // –£–∫–∞–∂–∏—Ç–µ URL –≤–∞—à–µ–≥–æ WebApp
               },
             ],
           ],
         },
        disable_web_page_preview: true, // –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–µ–≤—å—é —Å—Å—ã–ª–∫–∏
      });
      await ctx.pinChatMessage(message_data.message_id);
    } else {
      await ctx.reply(
        "‚ú® –ê—Å-—Å–∞–ª—è–º—É ‚Äò–∞–ª—è–π–∫—É–º –≤–∞ —Ä–∞—Ö–º–∞—Ç—É-–õ–ª–∞—Ö–∏ –≤–∞ –±–∞—Ä–∞–∫—è—Ç—É\n\nüõÇ –ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö Telegram. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram, –æ—Ç–∫—Ä–æ–π—Ç–µ —Ä–∞–∑–¥–µ–ª '–ò–∑–º–µ–Ω–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å' –∏ –¥–æ–±–∞–≤—å—Ç–µ –≤–∞—à–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."
      );
    }
  } catch (err) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ:", err);
    await ctx.reply("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ." + err);
  }
});

bot.help(async (ctx) => {
  try {
    await ctx.reply(`
üì£ –ë–æ—Ç –¥–ª—è –æ–±–º–µ–Ω–∞ –≤–∞–ª—é—Ç
–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä—É–π—Ç–µ –ø—É–±–ª–∏–∫–∞—Ü–∏—é –∏ –ø–æ–∏—Å–∫ –æ–±—ä—è–≤–ª–µ–Ω–∏–π –æ –∫—É–ø–ª–µ-–ø—Ä–æ–¥–∞–∂–µ –≤–∞–ª—é—Ç, –ø–æ–¥–æ–±–Ω–æ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞–º, —Ç–∞–∫–∏–º –∫–∞–∫ Bybit P2P. –ù–∞–π–¥–∏—Ç–µ –ª—É—á—à–∏–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è, —Ä–∞–∑–º–µ—Å—Ç–∏—Ç–µ —Å–≤–æ–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è –∏ –±—ã—Å—Ç—Ä–æ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –¥—Ä—É–≥–∏–º–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏ –æ–±–º–µ–Ω–∞.
–û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –±–æ—Ç–∞:

1Ô∏è‚É£ –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–π:
‚Ä¢ üí± –£–∫–∞–∂–∏—Ç–µ –≤–∞–ª—é—Ç—É –ø—Ä–æ–¥–∞–∂–∏ –∏ –ø–æ–∫—É–ø–∫–∏ (USD, USDT, RUB, KZT, USD, UZS, SAR, TRY).
‚Ä¢ üí≤ –£–∫–∞–∂–∏—Ç–µ –∫—É—Ä—Å –ø—Ä–æ–¥–∞–∂–∏ –∏ –ø–æ–∫—É–ø–∫–∏.
‚Ä¢ üèôÔ∏è –í—ã–±–µ—Ä–∏—Ç–µ —É–¥–æ–±–Ω—ã–π –≥–æ—Ä–æ–¥ –¥–ª—è —Å–¥–µ–ª–∫–∏ (–ú–µ–∫–∫–∞, –ú–µ–¥–∏–Ω–∞, –î–∂–∏–¥–¥–∞, –≠—Ä-–†–∏—è–¥).
‚Ä¢ üîÑ –£–∫–∞–∂–∏—Ç–µ —Å–ø–æ—Å–æ–± –æ–±–º–µ–Ω–∞: –Ω–∞–ª–∏—á–Ω—ã–π —Ä–∞—Å—á–µ—Ç (–Ω–∞–ª–∏—á–Ω—ã–π), –±–∞–Ω–∫–æ–≤—Å–∫–∏–π –ø–µ—Ä–µ–≤–æ–¥ (–ø–µ—Ä–µ–≤–æ–¥) –∏–ª–∏ –æ–±–∞ –≤–∞—Ä–∏–∞–Ω—Ç–∞.
‚Ä¢ ‚úçÔ∏è –î–æ–±–∞–≤—å—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –æ–±—ä—è–≤–ª–µ–Ω–∏—é.

2Ô∏è‚É£ –ü—Ä–æ—Å–º–æ—Ç—Ä –æ–±—ä—è–≤–ª–µ–Ω–∏–π:
‚Ä¢ üìú –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π —Å —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–µ–π –ø–æ –≥–æ—Ä–æ–¥–∞–º –∏ –≤–∞–ª—é—Ç–∞–º.
‚Ä¢ üëÅÔ∏è‚Äçüó®Ô∏è –£–¥–æ–±–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –æ–±—ä—è–≤–ª–µ–Ω–∏–π, –ø–æ—Ö–æ–∂–∏–π –Ω–∞ P2P-–æ–±—ä—è–≤–ª–µ–Ω–∏—è Bybit.
‚Ä¢ üì© –ö –∫–∞–∂–¥–æ–º—É –æ–±—ä—è–≤–ª–µ–Ω–∏—é –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ –¥–ª—è –º–≥–Ω–æ–≤–µ–Ω–Ω–æ–≥–æ –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ —á–∞—Ç —Å –∞–≤—Ç–æ—Ä–æ–º.

3Ô∏è‚É£ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è–º–∏:
‚Ä¢ üóÇÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –º–æ–≥—É—Ç –≤–∏–¥–µ—Ç—å —Å–≤–æ–∏ —Ç–µ–∫—É—â–∏–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è –∏ —É–¥–∞–ª—è—Ç—å –∏—Ö –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏.
‚Ä¢ üìä –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ –æ–±—ä—è–≤–ª–µ–Ω–∏—è.

4Ô∏è‚É£ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π:
‚Ä¢ üìù –ü—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è –±–æ—Ç —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç —É–¥–æ–±–Ω–æ–µ –¥–ª—è —á—Ç–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π.
‚Ä¢ üîó –°–æ–æ–±—â–µ–Ω–∏–µ –º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ –∑–∞–¥–∞–Ω–Ω—É—é –≥—Ä—É–ø–ø—É Telegram —Å –ø–æ–º–æ—â—å—é –∑–∞—Ä–∞–Ω–µ–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Å—Å—ã–ª–∫–∏.

5Ô∏è‚É£ –û–±–Ω–æ–≤–ª—è–µ–º—ã–µ –∫—É—Ä—Å—ã –≤–∞–ª—é—Ç:
‚Ä¢ üåê –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å API Google –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.
üåü –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –±–æ—Ç–∞:

‚Ä¢ ‚úÖ –£–¥–æ–±—Å—Ç–≤–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è: –º–∏–Ω–∏–º–∞–ª–∏—Å—Ç–∏—á–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è –æ–±—ä—è–≤–ª–µ–Ω–∏–π –∑–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ —à–∞–≥–æ–≤.
‚Ä¢ üîç –ü—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å: —á–µ—Ç–∫–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É—Å–ª–æ–≤–∏–π —Å–¥–µ–ª–∫–∏, –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –∏ —Å–ø–æ—Å–æ–±–æ–≤ –æ–ø–ª–∞—Ç—ã.
‚Ä¢ ‚ö° –ë—ã—Å—Ç—Ä–∞—è —Å–≤—è–∑—å: –º–≥–Ω–æ–≤–µ–Ω–Ω—ã–π –ø–µ—Ä–µ—Ö–æ–¥ –≤ Telegram-—á–∞—Ç —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.
‚Ä¢ üßÆ –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –≤–∞–ª—é—Ç: —Ä–∞—Å—Å—á–µ—Ç –≤—Å–µ—Ö –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö –≤–∞–ª—é—Ç –≤ –æ–¥–Ω–æ–º –º–µ—Å—Ç–µ.
      `)
  } catch (err) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ:", err);
    await ctx.reply("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ." + err);
  }
});

bot.action(/delete_(.+)/, async (ctx) => {
  try {
    const callbackData = ctx.match[1]; // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –≥—Ä—É–ø–ø—ã (.+)
    const message = ctx.callbackQuery.message.text.replace("#order", ""); // –°–æ–æ–±—â–µ–Ω–∏–µ, —Å–≤—è–∑–∞–Ω–Ω–æ–µ —Å callback
    const [messageId] = callbackData.split("_");

      await bot.telegram.editMessageText(
        GROUP, // –õ–∏–±–æ ID –∫–∞–Ω–∞–ª–∞
        messageId, // ID —Å–æ–æ–±—â–µ–Ω–∏—è
        undefined, // inlineMessageId, –µ—Å–ª–∏ –æ–Ω –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è
        `${message}\n\n<b>‚≠ïÔ∏è –û–±—ä—è–≤–ª–µ–Ω–∏–µ —Å–Ω—è—Ç–æ —Å –ø—É–±–ª–∏–∫–∞—Ü–∏–∏</b>`,
        {
          parse_mode: "HTML", // –£–∫–∞–∑—ã–≤–∞–µ—Ç —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞
          disable_web_page_preview: true, // –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–µ–≤—å—é —Å—Å—ã–ª–∫–∏
        }
      );

      await ctx.editMessageText(
        `${message}\n\n<b>‚≠ïÔ∏è –û–±—ä—è–≤–ª–µ–Ω–∏–µ —Å–Ω—è—Ç–æ —Å –ø—É–±–ª–∏–∫–∞—Ü–∏–∏</b>`,
        {
          parse_mode: "HTML",
          disable_web_page_preview: true, // –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–µ–≤—å—é —Å—Å—ã–ª–∫–∏
        }
      );

      await ctx.answerCbQuery('‚≠ïÔ∏è –û–±—ä—è–≤–ª–µ–Ω–∏–µ —Å–Ω—è—Ç–æ —Å –ø—É–±–ª–∏–∫–∞—Ü–∏–∏')
  } catch (err) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∑–∞–ø–∏—Å–∏:", err);
    await ctx.reply("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∑–∞–ø–∏—Å–∏.");
  }
});

app.post("/api/sendMessage", async (req, res) => {
  try {
    let buy, sell;
    if (req.body.data.type === "–ö—É–ø–∏—Ç—å") {
      sell = req.body.data.buyCurrency;
      buy = req.body.data.sellCurrency;
    } else {
      sell = req.body.data.sellCurrency;
      buy = req.body.data.buyCurrency;
    }
    const typeIcon = req.body.data.type === "–ö—É–ø–∏—Ç—å" ? `üü¢ –ü–æ–∫—É–ø–∫–∞ ${buy} –∑–∞ ${sell}` : `üî¥ –ü—Ä–æ–¥–∞–∂–∞ ${sell} –∑–∞ ${buy}`;
// üí± –û–±–º–µ–Ω –≤–∞–ª—é—Ç—ã
    let message = `
    ${typeIcon}
    ‚îú –í–∞–ª—é—Ç–∞ –ø—Ä–æ–¥–∞–∂–∏: ${sell}
    ‚îú –í–∞–ª—é—Ç–∞ –ø–æ–∫—É–ø–∫–∏: ${buy}
    ‚îú –°—É–º–º–∞: ${req.body.data.amount}
    ‚îú –ö—É—Ä—Å: ${req.body.data.rate}
    ‚îú –ì–æ—Ä–æ–¥: ${req.body.data.city}
    ${req.body.data.comment ? `‚îú: ${req.body.data.comment}` : "‚îî"}–°–ø–æ—Å–æ–± –æ–±–º–µ–Ω–∞: ${req.body.data.exchange}
    ${req.body.data.comment ? `‚îî –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: ${req.body.data.comment}` : ""}
    `;

// üöö –î–æ—Å—Ç–∞–≤–∫–∞: ${req.body.data.delivery}

    let message_data = await bot.telegram.sendMessage(
      GROUP, // ID –∫–∞–Ω–∞–ª–∞
      message,
      {
        ...Markup.inlineKeyboard([
          Markup.button.url(
            `üü© –ù–∞–ø–∏—Å–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ üü©`,
            `https://t.me/${req.body.user.username}`
          ),
        ]),
        disable_web_page_preview: true, // –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–µ–≤—å—é —Å—Å—ã–ª–∫–∏
      }
    );

    if (message_data) {
      await bot.telegram.sendMessage(
        req.body.user.chatId, // ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        message,
        {
          ...Markup.inlineKeyboard([
            Markup.button.callback(
              "üõë –°–Ω—è—Ç—å —Å –ø—É–±–ª–∏–∫–∞—Ü–∏–∏",
              `delete_${message_data.message_id}`
            ),
            Markup.button.url(
              "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ",
              `https://t.me/${LINK}/${message_data.message_id}`
            ),
          ]),
          disable_web_page_preview: true, // –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–µ–≤—å—é —Å—Å—ã–ª–∫–∏
        }
      );
    }

    res.send(message);
  } catch (error) {
    res.status(400).json({
      message: "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞–ø–∏—Å–∏",
      error: error.message,
    });
  }
});

const PORT = EXPRESS_PORT || 3000;
app.listen(PORT, () => {
  console.log(`listening on port ${PORT}`);
});
